/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoparqueadero;

import java.awt.Container;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.SwingUtilities;

/**
 *
 * @author Cesar Augusto Perez Tafur
 */
public class PanelListarUsuarios extends javax.swing.JPanel {

    /**
     * Creates new form PanelListarVehiculos
     */
    public PanelListarUsuarios() {
        initComponents();
        TableColumnModel columnModel = tblUsuarios.getColumnModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rbPerfilOperario = new javax.swing.JRadioButton();
        rbPerfilAdministrador = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btBuscar = new java.awt.Button();
        btNuevoUsuario = new java.awt.Button();
        btEditar = new java.awt.Button();

        setBackground(new java.awt.Color(246, 246, 246));

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cédula", "Perfil", "Nombres", "Apellidos", "Correo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsuarios.setUpdateSelectionOnSort(false);
        jScrollPane1.setViewportView(tblUsuarios);

        txtNombre.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(41, 116, 155));
        jLabel2.setText("Cédula");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(41, 116, 155));
        jLabel3.setText("Nombre");

        rbPerfilOperario.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        rbPerfilOperario.setForeground(new java.awt.Color(63, 63, 63));
        rbPerfilOperario.setText("Operario");
        rbPerfilOperario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPerfilOperarioActionPerformed(evt);
            }
        });

        rbPerfilAdministrador.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        rbPerfilAdministrador.setForeground(new java.awt.Color(63, 63, 63));
        rbPerfilAdministrador.setText("Administrador");
        rbPerfilAdministrador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPerfilAdministradorActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(18, 24, 80));
        jLabel1.setText("Modulo de Consulta de Usuarios");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(41, 116, 155));
        jLabel6.setText("Perfil");

        txtCedula.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txtApellidos.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(41, 116, 155));
        jLabel8.setText("Apellidos");

        btBuscar.setBackground(new java.awt.Color(51, 102, 255));
        btBuscar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btBuscar.setLabel("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        btNuevoUsuario.setActionCommand("Reporte");
        btNuevoUsuario.setBackground(new java.awt.Color(255, 255, 51));
        btNuevoUsuario.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btNuevoUsuario.setForeground(new java.awt.Color(0, 0, 0));
        btNuevoUsuario.setLabel("Nuevo usuario");
        btNuevoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoUsuarioActionPerformed(evt);
            }
        });

        btEditar.setActionCommand("Editar");
        btEditar.setBackground(new java.awt.Color(255, 0, 0));
        btEditar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btEditar.setForeground(new java.awt.Color(255, 255, 255));
        btEditar.setLabel("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbPerfilOperario)
                        .addGap(9, 9, 9)
                        .addComponent(rbPerfilAdministrador))
                    .addComponent(jLabel6)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(143, 143, 143))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(118, 118, 118)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(btEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(btNuevoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre)))
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rbPerfilOperario)
                    .addComponent(rbPerfilAdministrador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btNuevoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rbPerfilAdministradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPerfilAdministradorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbPerfilAdministradorActionPerformed

    private void rbPerfilOperarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPerfilOperarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbPerfilOperarioActionPerformed

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
         
        try {
            
            DefaultTableModel modelo = (DefaultTableModel) tblUsuarios.getModel();
            modelo.setRowCount(0);
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://systemengine-database.database.windows.net:1433;database=SystemEngine-database;user=systemengine-server@systemengine-database;password={63Z6OOi*};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;","systemengine-server","63Z6OOi*");
            Statement stat = con.createStatement();
            String tipoPerfil = "";
        if (rbPerfilOperario.isSelected()) {
            tipoPerfil = "Operario";
        }
        if (rbPerfilAdministrador.isSelected()) {
            tipoPerfil = "Administrador";
        }
            String consulta = "SELECT "+
                                        "U.Correo as 'Correo', "+
                                        "U.Nombre as 'Nombre', "+
                                        "U.Apellidos as 'Apellidos', "+
                                        "U.Cedula as 'Cedula', "+
                                        "P.Tipo_perfil as 'Perfil' "+
                                    "FROM [dbo].[Usuarios] U "+
                                    "JOIN [dbo].[Permisos] P "+
                                    "ON P.Cedula = U.Cedula WHERE Nombre LIKE'%" + txtNombre.getText() + "%' AND Apellidos LIKE '%" + txtApellidos.getText() + "%' AND U.Cedula LIKE '%" + txtCedula.getText() + "%'" + "AND P.Tipo_perfil ='" + tipoPerfil + "';" ;


                                    
             
            String sql = "SELECT * FROM [dbo].[Usuarios]";
            ResultSet rs = stat.executeQuery(consulta);
            System.out.println(sql);
     
            // nombre,apellido,cedula,perfil,correo
            if (rs.next()) {

                do {
                  
                    String Nombre = rs.getString("Nombre");
                    String Apellidos = rs.getString("Apellidos");
                    String Cedula = rs.getString("Cedula");
                    String Perfil = rs.getString("Perfil");
                    String Correo = rs.getString("Correo");

                    String[] fila = { (Cedula) , (Perfil) ,(Nombre) , (Apellidos) ,(Correo) };
                    modelo.addRow(fila);
                    
                } while (rs.next());

            } else {
                JOptionPane.showMessageDialog(null, "No existen resultados para la busqueda", "Búsqueda vacia", JOptionPane.INFORMATION_MESSAGE);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PanelListarUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PanelListarUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
           
        
    }//GEN-LAST:event_btBuscarActionPerformed

    private void btNuevoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoUsuarioActionPerformed
        // TODO add your handling code here:
        Principal_Admin objFrame = (Principal_Admin) SwingUtilities.getAncestorOfClass(Principal_Admin.class, this);
        objFrame.changeToInsertUsers();
    }//GEN-LAST:event_btNuevoUsuarioActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        try {
            // TODO add your handling code here:

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://systemengine-database.database.windows.net:1433;database=SystemEngine-database;user=systemengine-server@systemengine-database;password={63Z6OOi*};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;","systemengine-server","63Z6OOi*");
            Statement stat = con.createStatement();

            String sql = "SELECT Id_parqueadero, Nombre_parqueadero, Celdas_totales, Valor_fraccion FROM [dbo].[Parqueadero];";
            ResultSet rs = stat.executeQuery(sql);

            System.out.println(sql);

            ArrayList<Integer> ids = new ArrayList<>();
            ArrayList<String> nombres_parqueaderos = new ArrayList<>();

            rs.next();

            do {
                int id_parqueadero = rs.getInt("Id_parqueadero");
                String nombre_parqueadero = rs.getString("Nombre_parqueadero");

                ids.add(id_parqueadero);
                nombres_parqueaderos.add(nombre_parqueadero);

            } while (rs.next());

            // finally turn the array lists into arrays - if really needed

            String[] nombresArr = new String[nombres_parqueaderos.size()];
            nombresArr = nombres_parqueaderos.toArray(nombresArr);

            Object seleccion = JOptionPane.showInputDialog(
                null,
                "Seleccione un parqueadero",
                "Parqueaderos a editar",
                JOptionPane.QUESTION_MESSAGE,
                null,  // null para icono defecto
                nombresArr,
                nombresArr[0]);

            String strOpcion = String.valueOf(seleccion);

            int indexSelected = nombres_parqueaderos.indexOf(seleccion);
            int id = ids.get(indexSelected);

            Principal_Admin objFrame = (Principal_Admin) SwingUtilities.getAncestorOfClass(Principal_Admin.class, this);
            objFrame.changeToEditPark(id);

            stat.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PanelConsultarParqueaderos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PanelConsultarParqueaderos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btEditarActionPerformed
@Override
    public void setVisible ( boolean value ) {
        super.setVisible(value);
        
        if ( value ) { try {
            
            DefaultTableModel modelo = (DefaultTableModel) tblUsuarios.getModel();
            modelo.setRowCount(0);
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://systemengine-database.database.windows.net:1433;database=SystemEngine-database;user=systemengine-server@systemengine-database;password={63Z6OOi*};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;","systemengine-server","63Z6OOi*");
            Statement stat = con.createStatement();
            
            String consulta = "SELECT "+
                                        "U.Correo as 'Correo', "+
                                        "U.Nombre as 'Nombre', "+
                                        "U.Apellidos as 'Apellidos', "+
                                        "U.Cedula as 'Cedula', "+
                                        "P.Tipo_perfil as 'Perfil' "+
                                    "FROM [dbo].[Usuarios] U "+
                                    "JOIN [dbo].[Permisos] P "+
                                    "ON P.Cedula = U.Cedula ;" ;                                    
             
            String sql = "SELECT * FROM [dbo].[Usuarios]";
            ResultSet rs = stat.executeQuery(consulta);
            System.out.println(sql);
     
            // nombre,apellido,cedula,perfil,correo
            if (rs.next()) {

                do {
                  
                    String Nombre = rs.getString("Nombre");
                    String Apellidos = rs.getString("Apellidos");
                    String Cedula = rs.getString("Cedula");
                    String Perfil = rs.getString("Perfil");
                    String Correo = rs.getString("Correo");

                    String[] fila = { (Cedula) , (Perfil) ,(Nombre) , (Apellidos) ,(Correo) };
                    modelo.addRow(fila);
                    
                } while (rs.next());

            } else {
                JOptionPane.showMessageDialog(null, "No existen resultados para la busqueda", "Búsqueda vacia", JOptionPane.INFORMATION_MESSAGE);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PanelListarUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PanelListarUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
    
            
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btBuscar;
    private java.awt.Button btEditar;
    private java.awt.Button btNuevoUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbPerfilAdministrador;
    private javax.swing.JRadioButton rbPerfilOperario;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
