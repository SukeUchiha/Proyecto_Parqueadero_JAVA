/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package proyectoparqueadero;

import com.sun.tools.javac.util.ArrayUtils;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SIMON
 */
public class PanelConsultarParqueaderos extends javax.swing.JPanel {

    /**
     * Creates new form PanelConsultarCeldas
     */
    public PanelConsultarParqueaderos() {
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblParqueaderos = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFraccion = new javax.swing.JTextField();
        txtNombreParq = new javax.swing.JTextField();
        btConsultar = new java.awt.Button();
        btCrearParqueadero = new java.awt.Button();
        btEditar = new java.awt.Button();

        setBackground(new java.awt.Color(246, 246, 246));

        tblParqueaderos.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tblParqueaderos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Total de Celdas", "Celdas disponibles", "Valor Fraccion", "Valor Hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblParqueaderos);

        jLabel4.setFont(new java.awt.Font("SansSerif", 3, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(18, 24, 80));
        jLabel4.setText("Modulo de Consulta de Parqueaderos");

        jLabel9.setBackground(new java.awt.Color(255, 255, 102));
        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(41, 116, 155));
        jLabel9.setText("Parqueadero");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(41, 116, 155));
        jLabel5.setText("Valor Fracci√≥n");

        txtFraccion.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txtNombreParq.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        btConsultar.setBackground(new java.awt.Color(51, 102, 255));
        btConsultar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btConsultar.setForeground(new java.awt.Color(255, 255, 255));
        btConsultar.setLabel("Consultar");
        btConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarActionPerformed(evt);
            }
        });

        btCrearParqueadero.setActionCommand("Inactivar");
        btCrearParqueadero.setBackground(new java.awt.Color(255, 255, 51));
        btCrearParqueadero.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btCrearParqueadero.setForeground(new java.awt.Color(0, 0, 0));
        btCrearParqueadero.setLabel("Crear parqueadero");
        btCrearParqueadero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCrearParqueaderoActionPerformed(evt);
            }
        });

        btEditar.setActionCommand("Editar");
        btEditar.setBackground(new java.awt.Color(255, 0, 0));
        btEditar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btEditar.setForeground(new java.awt.Color(255, 255, 255));
        btEditar.setLabel("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNombreParq, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(135, 135, 135)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel5))
                    .addComponent(txtFraccion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(btCrearParqueadero, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(btEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(118, 118, 118))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFraccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreParq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCrearParqueadero, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarActionPerformed
           
        try {
            
            DefaultTableModel modelo = (DefaultTableModel) tblParqueaderos.getModel();
            modelo.setRowCount(0);
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://systemengine-database.database.windows.net:1433;database=SystemEngine-database;user=systemengine-server@systemengine-database;password={63Z6OOi*};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;","systemengine-server","63Z6OOi*");
            Statement stat = con.createStatement();
            
            String fraccion = txtFraccion.getText();
            String nombreParq = txtNombreParq.getText();
            
            String sql = "SELECT Id_parqueadero, Nombre_parqueadero, Total_celdas_disponibles, Celdas_totales, Valor_fraccion, Valor_hora FROM [dbo].[Parqueadero] WHERE CONVERT(varchar, Valor_fraccion) LIKE'%" + fraccion + "%' AND Nombre_parqueadero LIKE '%" + nombreParq + "%';";
            ResultSet rs = stat.executeQuery(sql);
            
            System.out.println(sql);
            
            if (rs.next()) {

                do {
                    String nombre_parqueadero = rs.getString("Nombre_parqueadero");
                    int celdas_totales = rs.getInt("Celdas_totales");
                    int celdas_disponibles = rs.getInt("Total_celdas_disponibles");
                    int valor_fraccion = rs.getInt("Valor_fraccion");
                    int valor_hora = rs.getInt("Valor_hora");

                    String[] fila = { nombre_parqueadero , String.valueOf(celdas_totales) , String.valueOf(celdas_disponibles) , String.valueOf(valor_fraccion) , String.valueOf(valor_hora) };
                    modelo.addRow(fila);
                    
                } while (rs.next());

            } else {
                JOptionPane.showMessageDialog(null, "No existen resultados para la busqueda", "B√∫squeda vacia", JOptionPane.INFORMATION_MESSAGE);
            }
            
            stat.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PanelConsultarParqueaderos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PanelConsultarParqueaderos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btConsultarActionPerformed

    private void btCrearParqueaderoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCrearParqueaderoActionPerformed
        // TODO add your handling code here:
        Principal_Admin objFrame = (Principal_Admin) SwingUtilities.getAncestorOfClass(Principal_Admin.class, this);
        objFrame.changeToInsertPark();
    }//GEN-LAST:event_btCrearParqueaderoActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        try {
            // TODO add your handling code here:
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://systemengine-database.database.windows.net:1433;database=SystemEngine-database;user=systemengine-server@systemengine-database;password={63Z6OOi*};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;","systemengine-server","63Z6OOi*");
            Statement stat = con.createStatement();
            
            String sql = "SELECT Id_parqueadero, Nombre_parqueadero, Celdas_totales, Valor_fraccion FROM [dbo].[Parqueadero];";
            ResultSet rs = stat.executeQuery(sql);
            
            System.out.println(sql);
            
            ArrayList<Integer> ids = new ArrayList<>();
            ArrayList<String> nombres_parqueaderos = new ArrayList<>();
            
            rs.next();
                    
            do {
                int id_parqueadero = rs.getInt("Id_parqueadero");
                String nombre_parqueadero = rs.getString("Nombre_parqueadero");

                ids.add(id_parqueadero);
                nombres_parqueaderos.add(nombre_parqueadero);
                
            } while (rs.next());

            // finally turn the array lists into arrays - if really needed

            String[] nombresArr = new String[nombres_parqueaderos.size()];
            nombresArr = nombres_parqueaderos.toArray(nombresArr);

            Object seleccion = JOptionPane.showInputDialog(
                    null,
                    "Seleccione un parqueadero",
                    "Parqueaderos a editar",
                    JOptionPane.QUESTION_MESSAGE,
                    null,  // null para icono defecto
                    nombresArr,
                    nombresArr[0]);
            
            String strOpcion = String.valueOf(seleccion);
            
            int indexSelected = nombres_parqueaderos.indexOf(seleccion);
            int id = ids.get(indexSelected);
            
            Principal_Admin objFrame = (Principal_Admin) SwingUtilities.getAncestorOfClass(Principal_Admin.class, this);
            objFrame.changeToEditPark(id);
            
            stat.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PanelConsultarParqueaderos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PanelConsultarParqueaderos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btEditarActionPerformed

    @Override
    public void setVisible ( boolean value ) {
        super.setVisible(value);
        
        if ( value ) {
            try {
            
                DefaultTableModel modelo = (DefaultTableModel) tblParqueaderos.getModel();
                modelo.setRowCount(0);

                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection("jdbc:sqlserver://systemengine-database.database.windows.net:1433;database=SystemEngine-database;user=systemengine-server@systemengine-database;password={63Z6OOi*};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;","systemengine-server","63Z6OOi*");
                Statement stat = con.createStatement();


                String sql = "SELECT * FROM [dbo].[Parqueadero]";
                ResultSet rs = stat.executeQuery(sql);
                System.out.println(sql);
                rs.next();

                do {
                    int id_parqueadero = rs.getInt("Id_parqueadero");
                    String nombre_parqueadero = rs.getString("Nombre_parqueadero");
                    int celdas_totales = rs.getInt("Celdas_totales");
                    int celdas_disponibles = rs.getInt("Total_celdas_disponibles");
                    int valor_fraccion = rs.getInt("Valor_fraccion");
                    int valor_hora = rs.getInt("Valor_hora");

                    String[] fila = { nombre_parqueadero , String.valueOf(celdas_totales) , String.valueOf(celdas_disponibles) , String.valueOf(valor_fraccion) , String.valueOf(valor_hora) };
                    modelo.addRow(fila);
                    
                } while (rs.next());
                
                stat.close();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PanelConsultarParqueaderos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(PanelConsultarParqueaderos.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            txtFraccion.setText("");
            txtNombreParq.setText("");
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btConsultar;
    private java.awt.Button btCrearParqueadero;
    private java.awt.Button btEditar;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblParqueaderos;
    private javax.swing.JTextField txtFraccion;
    private javax.swing.JTextField txtNombreParq;
    // End of variables declaration//GEN-END:variables
}
